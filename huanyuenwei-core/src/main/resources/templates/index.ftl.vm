<template>
  <div class="app-container">
    <!--工具栏-->
    <div class="head-container">
    #if (${cfg.hasQuery})
      <div v-if="crud.props.searchToggle">
        <!-- 搜索 -->
        #if (${cfg.queryColumns})
        #foreach (${column} in ${cfg.queryColumns})
            #if (${column.queryType} != 'BetWeen')
                <label class="el-form-item-label">
             #if (${column.remark} != '')
                ${column.remark}
             #else
                ${column.changeColumnName}
             #end
        </label>
        <el-input v-model="query.${column.changeColumnName}" clearable placeholder="#if (${column.remark} != '')${column.remark}#else${column.changeColumnName}#end"
        style="width: 185px;" class="filter-item" @keyup.enter.native="crud.toQuery" />
            #end
          #end
        #end
          #if (${cfg.betweens})
            #foreach (${column} in ${cfg.betweens})
              #if (${column.queryType})
                <date-range-picker
                  v-model="query.${column.changeColumnName}"
                  start-placeholder="${column.changeColumnName}Start"
                  end-placeholder="${column.changeColumnName}Start"
                  class="date-item"
                />
              #end
            #end
          #end
        <rrOperation :crud="crud" />
      </div>
     #end
      <!--如果想在工具栏加入更多按钮，可以使用插槽方式， slot = 'left' or 'right'-->
      <crudOperation :permission="permission" />
      <!--表单组件-->
      <el-dialog :close-on-click-modal="false" :before-close="crud.cancelCU" :visible.sync="crud.status.cu > 0" :title="crud.status.title" width="500px">
        <el-form ref="form" :model="form" #if (${cfg.isNotNullColumns}):rules="rules"#end size="small" label-width="80px">
    #if (${cfg.columns})
      #foreach (${column} in ${cfg.columns})
        #if (${column.formShow})
          <el-form-item label="#if (${column.remark} != '')${column.remark}
            #else${column.changeColumnName}#end"
            #if (${column.istNotNull}) prop="${column.changeColumnName}"#end>
            #if (${column.formType} == 'Input')
            <el-input v-model="form.${column.changeColumnName}" style="width: 370px;" />
            #elseif (${column.formType} == 'Textarea')
            <el-input v-model="form.${column.changeColumnName}" :rows="3" type="textarea" style="width: 370px;" />
            #elseif (${column.formType} == 'Radio')
            #if (${column.dictName}) && (${column.dictName})!=""
            <el-radio v-model="form.${column.changeColumnName}" v-for="item in dict.${column.dictName}" :key="item.id" :label="item.value">{{ item.label }}</el-radio>
            #else
              未设置字典，请手动设置 Radio
            #end
            #elseif (${column.formType} == 'Select')
              #if (${column.dictName}) && (${column.dictName})!=""
            <el-select v-model="form.${column.changeColumnName}" filterable placeholder="请选择">
              <el-option
                v-for="item in dict.${column.dictName}"
                :key="item.id"
                :label="item.label"
                :value="item.value" />
            </el-select>
              #else
               未设置字典，请手动设置 Select
              #end
            #else
            <el-date-picker v-model="form.${column.changeColumnName}" type="datetime" style="width: 370px;" />
            #end
          </el-form-item>
        #end
      #end
    #end
        </el-form>
        <div slot="footer" class="dialog-footer">
          <el-button type="text" @click="crud.cancelCU">取消</el-button>
          <el-button :loading="crud.cu === 2" type="primary" @click="crud.submitCU">确认</el-button>
        </div>
      </el-dialog>
      <!--表格渲染-->
      <el-table ref="table" v-loading="crud.loading" :data="crud.data" size="small" style="width: 100%;" @selection-change="crud.selectionChangeHandler">
        <el-table-column type="selection" width="55" />
        #if (${columns})
            #foreach (${column} in ${columns})
            #if (${column.columnShow})
           #if (${column.dictName}) && (${column.dictName})!=""
        <el-table-column prop="${column.changeColumnName}" label="#if (${column.remark} != '')${column.remark}#else${column.changeColumnName}#end">
          <template slot-scope="scope">
            {{ dict.label.${column.dictName}[scope.row.${column.changeColumnName}] }}
          </template>
        </el-table-column>
          #elseif (${column.columnType} != 'Timestamp')
        <el-table-column prop="${column.changeColumnName}" label="#if (${column.remark} != '')${column.remark}#else${column.changeColumnName}#end" />
                #else
        <el-table-column prop="${column.changeColumnName}" label="#if (${column.remark} != '')>${column.remark}#else${column.changeColumnName}#end">
          <template slot-scope="scope">
            <span>{{ parseTime(scope.row.${column.changeColumnName}) }}</span>
          </template>
        </el-table-column>
                #end
            #end
           #end
        #end
        <el-table-column v-permission="['admin','${cfg.changeClassName}:edit','${changeClassName}:del']" label="操作" width="150px" align="center">
          <template slot-scope="scope">
            <udOperation
              :data="scope.row"
              :permission="permission"
            />
          </template>
        </el-table-column>
      </el-table>
      <!--分页组件-->
      <pagination />
    </div>
  </div>
</template>

<script>
import crud${cfg.className} from '@/api/${cfg.changeClassName}'
import CRUD, { presenter, header, form, crud } from '@crud/crud'
import rrOperation from '@crud/RR.operation'
import crudOperation from '@crud/CRUD.operation'
import udOperation from '@crud/UD.operation'
import pagination from '@crud/Pagination'

const defaultForm = { #if (${cfg.columns})#foreach (${column} in ${cfg.columns})${column.changeColumnName}: null#if (${column.column_has_next}), #end#end#end }
export default {
  name: '${cfg.className}',
  components: { pagination, crudOperation, rrOperation, udOperation },
  mixins: [presenter(), header(), form(defaultForm), crud()],
  #if (${cfg.hasDict})
  dicts: [#if (${cfg.hasDict})<#foreach (${dict} in ${cfg.dicts})>'${dict}'#if (${dict_has_next}), #end#end#end],
  #end
  cruds() {
    return CRUD({ title: '${cfg.apiAlias}', url: 'api/${cfg.changeClassName}', idField: '${cfg.pkChangeColName}',
     sort: '${cfg.pkChangeColName},desc', crudMethod: { ...crud${cfg.className} }})
  },
  data() {
    return {
      permission: {
        add: ['admin', '${cfg.changeClassName}:add'],
        edit: ['admin', '${cfg.changeClassName}:edit'],
        del: ['admin', '${cfg.changeClassName}:del']
      },
      rules: {
        #if (${cfg.isNotNullColumns})
        #foreach (${column} in ${cfg.isNotNullColumns})
        #if (${column.istNotNull})
        ${column.changeColumnName}: [
          { required: true, message: '#if (${column.remark} != '')${column.remark}#end 不能为空', trigger: 'blur' }
        ]#if (${column_has_next}),#end
        #end
        #end
        #end
      }#if (${cfg.hasQuery}),
      queryTypeOptions: [
        #if (${queryColumns})
        #foreach (${column} in ${cfg.queryColumns})
        #if (${column.queryType}) != 'BetWeen'
        { key: '${column.changeColumnName}', display_name: '#if (${column.remark} != '')${column.remark}#else${column.changeColumnName}#end' }#if (${column_has_next})>,#end
        #end
        #end
        #end
      ]
      #end
    }
  },
  methods: {
    // 钩子：在获取表格数据之前执行，false 则代表不获取数据
    [CRUD.HOOK.beforeRefresh]() {
      return true
    }
  }
}
</script>

<style scoped>

</style>
